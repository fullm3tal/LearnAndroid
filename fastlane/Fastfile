require 'dotenv/load'

default_platform(:android)

platform :android do

    lane :build_android_debug do
        gradle(
          tasks: ["clean", "bundleDebug"]
        )
    end

      lane :clean_build do
        gradle(task: 'clean')
      end

    lane :build_android_release do |options|
      signing_config = {
        keystore_path: ENV['KEYSTORE_FILE_PATH'],
        keystore_password: ENV['KEYSTORE_PASSWORD'],
        key_alias: ENV['KEY_ALIAS'],
        key_password: ENV['KEY_PASSWORD']
      }
      clean_build()
        gradle(
           task: "bundle",
            build_type: "Release",
            properties: {
              "android.injected.signing.store.file" => signing_config[:keystore_path],
              "android.injected.signing.store.password" => signing_config[:keystore_password],
              "android.injected.signing.key.alias" => signing_config[:key_alias],
              "android.injected.signing.key.password" =>signing_config[:key_password],
              "android.injected.version.code" => options[:versionCode]
            }
        )
    end

    lane :upload_build_internal do
    validate_play_store_json_key(
      json_key: ENV['JSON_FILE_PATH']
    )
    version_code = get_next_version_code('internal')
    increment_version_code(
      gradle_file_path: "./app/build.gradle",
      version_code: version_code
    )
    UI.message("Using Version Code: "+ version_code)
    build_android_release(versionCode: version_code)
    upload_to_play_store(
    json_key: ENV['JSON_FILE_PATH'],
    package_name: 'com.leaphorizon.learnandroid',
    aab:"apk/app-release.aab",
    track: "internal",
    rollout: "1",
    skip_upload_apk: true)
    end

    lane :upload_build_production do
    validate_play_store_json_key(
      json_key: ENV['JSON_FILE_PATH']
    )
    version_code = get_next_version_code('production')
    increment_version_code(
      gradle_file_path: "./app/build.gradle",
      version_code: version_code
    )
    UI.message("Using Version Code: "+ version_code)
    build_android_release(versionCode: version_code)
    upload_to_play_store(
    json_key: ENV['JSON_FILE_PATH'],
    package_name: 'com.leaphorizon.learnandroid',
    aab:"apk/app-release.aab",
    track: "production",
    rollout: "1",
    skip_upload_apk: true)
    end

    def get_next_version_code(consoleTrack)
        otherTrack = "internal"
         if(consoleTrack == "internal")
            otherTrack = "production"
         end
        versionCode = "#{google_play_track_version_codes(package_name: 'com.leaphorizon.learnandroid',
                                                                                  track: otherTrack,
                                                                                  json_key: ENV['JSON_FILE_PATH'],)[0] + 1}"
        internalVersionCode  = "#{google_play_track_version_codes(package_name: 'com.leaphorizon.learnandroid',
                                                               track: consoleTrack,
                                                               json_key: ENV['JSON_FILE_PATH'],)[0] + 1}"
        if(internalVersionCode.to_i > versionCode.to_i)
            versionCode = internalVersionCode
        end
        return versionCode

    end

end